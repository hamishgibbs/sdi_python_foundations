---
title: "Python data science"
author: Hamish Gibbs
format: revealjs
---

## Today: Python data science

* Introduction to Python data science tools.
* Introduction to a basic data science workflow.
* This afternoon: collaborating on a data science project.

## Data science

* Definition of data science: 
    * *"Extracting meaningful insights from data."* 
* *Meaningful* is important.
    * Use the tools of programming / statistics to create meaning from your data.
* Usually, there is no "right" answer, just "better" and "worse" answers.
    * You exercise a lot of judgement.

## Data science workflow

* Data science is **not** just machine learning.
    * Most data science work is:
        * Data preparation
        * Data transformation 
        * Method selection
            * *Statistics / machine learning*
        * Communicating results

## Python data science tools

* Today, we will learn about the most popular Python data science "stack"
    * Data preparation / data transformation 
        * [`pandas`](https://pandas.pydata.org/), [`numpy`](https://numpy.org/)
    * Statistics / machine learning
        * [`sklearn`](https://scikit-learn.org/stable/)
    * Communicating results
        * [`matplotlib`](https://matplotlib.org/)

## R equivalents

* Python libraries mostly have their R equivalents:
    * [`pandas`](https://pandas.pydata.org/) : [`dplyr`](https://dplyr.tidyverse.org/)
    * [`sklearn`](https://scikit-learn.org/stable/) : [`caret`](https://topepo.github.io/caret/)?
    * [`matplotlib`](https://matplotlib.org/) : [`ggplot2`](https://ggplot2.tidyverse.org/reference/ggsave.html)
* See what you prefer, I use both languages very regularly!

## Diving deeper

* Python has many other options for data science tools.
* Alternatives to [`pandas`](https://pandas.pydata.org/):
    * [`polars`](https://pola.rs/) *(Like Python's version of [`data.table`](https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html))*
    * [`dask`](https://www.dask.org/)
* Alternatives to [`sklearn`](https://scikit-learn.org/stable/):
    * ...?
* Alternatives to [`matplotlib`](https://matplotlib.org/):
    * [`seaborn`](https://seaborn.pydata.org/)
    * [`plotnine`](https://plotnine.org/) *(R users might like this one!)*

## Tutorial #1: pandas

* [10 minutes to pandas](https://pandas.pydata.org/docs/user_guide/10min.html)
    * *This is a detailed tutorial with everything in `pandas` you will need to know for tomorrow!*
* Core concepts: 
    * Creating a DataFrame
    * Selection
    * Missing data
    * Grouping

## Tutorial #2: plotting in pandas with matplotlib

* [Chart visualization](https://pandas.pydata.org/docs/user_guide/visualization.html)
    * *This picks up where the previous tutorial leaves off.*
* Core concepts: 
    * Different types of visualizations
    * Plot formatting
    * Subplots

* **Good question:** This is a `pandas` tutorials. Where is `matplotlib` in all of this?

## Tutorial #3: sklearn

* [sklearn - Getting Started](https://scikit-learn.org/stable/getting_started.html)
    * *A very basic introduction to the way `sklearn` models work.* 
* Core concepts: 
    * Fitting a model to data
    
        ```python
        clf.fit(X, y)
        ```
    * Making predictions with a model

        ```python
        clf.predict(X)
        ```
    
    * Model evaluation
    
        ```python
        result = cross_validate(lr, X, y)
        ```


## Tutorial #4: pandas / matplotlib

* [Linear model: from regression to sparsity](https://scikit-learn.org/stable/tutorial/statistical_inference/supervised_learning.html#linear-model-from-regression-to-sparsity)
* Core concepts: 
    * [Linear regression](https://scikit-learn.org/stable/tutorial/statistical_inference/supervised_learning.html#linear-regression)
        * I recommend focusing on the (small) linear regression section.
        * *Tip: print out each variable and try to understand how data flows through the model. What format is it in? How could you format a different dataset in the same way?*

## Extra

* Start working with the [dataset](https://github.com/hamishgibbs/sdi_python_foundations/blob/main/data/2020-08-24-listings.csv.gz) we will use tomorrow. 
    * For help reading the data: [see here](https://pandas.pydata.org/docs/user_guide/io.html).
* Work on a few of the items in the challenge: 
    * *What variables are in the dataset?*
    * *What are the data types of the variables?*
    * *Is there any missing data?*
