---
title: "Python data science"
author: Hamish Gibbs
format: revealjs
---

## Recap

* Great job!
* We only have 4 days to go from introductory to advanced Python concepts. 
    * Plus: programming tools like VSCode and `git`!
* Classes and functions can be abstract, but they are the building blocks of what we will do today.
    * Hopefully today is more familiar to people who have used R!

## Today: Python data science

* Introduction to Python data science tools.
* Introduction to a basic data science workflow.
* This afternoon: collaborating on a data science project.

## Tomorrow

* Data science "challenge"
* *Predicting the nightly price of AirBnBs in London*
* See the Guidelines [here](../challenge.qmd).

## Data science

* Definition of data science: 
    * *"Extracting meaningful insights from data."* 
* *Meaningful* is important.
    * Use the tools of programming / statistics to create meaning from your data.
* Usually, there is no "right" answer, just "better" and "worse" answers.
    * You exercise a lot of judgement.

## Data science workflow

* Data science is **not** just machine learning.
    * Most data science work is:
        * Data preparation
        * Data transformation 
        * Method selection
            * *Statistics / machine learning*
        * Communicating results

## Python data science tools

* Today, we will learn about the most popular Python data science "stack"
    * Data preparation / data transformation 
        * [`pandas`](https://pandas.pydata.org/), [`numpy`](https://numpy.org/)
    * Statistics / machine learning
        * [`sklearn`](https://scikit-learn.org/stable/)
    * Communicating results
        * [`matplotlib`](https://matplotlib.org/)

## Python data science tools

* Tomorrow, we will use this "stack" to do our data science project
* Exploratory analysis, data transformation
    * [`pandas`](https://pandas.pydata.org/)
* Regression model fitting and evaluation
    * [`sklearn`](https://scikit-learn.org/stable/)
* Visualize results
    * [`pandas`](https://pandas.pydata.org/), [`matplotlib`](https://matplotlib.org/)

## R equivalents

* Python libraries mostly have their R equivalents:
    * [`pandas`](https://pandas.pydata.org/) : [`dplyr`](https://dplyr.tidyverse.org/)
    * [`matplotlib`](https://matplotlib.org/) : [`ggplot2`](https://ggplot2.tidyverse.org/reference/ggsave.html)
    * [`sklearn`](https://scikit-learn.org/stable/) : [`caret`](https://topepo.github.io/caret/)?
* See what you prefer, I use both languages!

## Diving deeper

* Python has many other options for data science tools.
* Alternatives to [`pandas`](https://pandas.pydata.org/):
    * [`polars`](https://pola.rs/) *(Like Python's version of [`data.table`](https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html))*
    * [`dask`](https://www.dask.org/)
* Alternatives to [`sklearn`](https://scikit-learn.org/stable/):
    * ...?
* Alternatives to [`matplotlib`](https://matplotlib.org/):
    * [`seaborn`](https://seaborn.pydata.org/)
    * [`plotnine`](https://plotnine.org/) *(R users might like this one!)*

## Tutorial #1: Selecting data

* [pandas-cookbook: Selecting data (Chapter 2)](https://nbviewer.org/github/jvns/pandas-cookbook/blob/master/cookbook/Chapter%202%20-%20Selecting%20data%20&%20finding%20the%20most%20common%20complaint%20type.ipynb)
* Core concepts: 
    * Reading data from a `.csv` file
    * Inspecting a dataset
    * Selecting data

## Tutorial #2: More selecting data

* [pandas-cookbook: More selecting data (Chapter 3)](https://nbviewer.org/github/jvns/pandas-cookbook/blob/master/cookbook/Chapter%203%20-%20Which%20borough%20has%20the%20most%20noise%20complaints%20%28or%2C%20more%20selecting%20data%29.ipynb)
* Core concepts: 
    * Selection by multiple columns
    * The role of `numpy` in `pandas`
    * Basic plotting (`matplotlib` in `pandas`)

## Data: Tutorials 1 and 2

* Tutorials #1 and #2 come from the [pandas-cookbook](https://github.com/jvns/pandas-cookbook).
* Go to the `/data` folder in the GitHub repository (link above).
* Download the `311-service-requests.csv` file and store it on your computer.

## Packages: Tutorials 1 and 2

* Install the required packages using your terminal in VSCode

    ```shell
    pip install pandas matplotlib scikit-learn
    ```

* Trouble installing? Tell me!